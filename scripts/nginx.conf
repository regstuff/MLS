user root;
worker_processes 1;

error_log logs/rtmp_error.log emerg;
pid logs/nginx.pid;

events {

	worker_connections 1024;
}

rtmp {

	server {

		listen 1935;
		chunk_size 8192;

		#    allow publish 192.168.0.0/24;
		#    deny publish all;

		application output {

			live on;
			meta copy;
			push_reconnect 1s;
			#	idle_streams off;
			#	drop_idle_publisher 120s;


			recorder rec {

				record off;
				record_suffix .flv;
				record_path /usr/local/nginx/html/recording/;
				record_unique on;
				#                record_interval 30m;
			}
		}

		application main {

			live on;
			meta copy;
			push_reconnect 1s;
			idle_streams off;
			drop_idle_publisher 5s;

			recorder rec {

				record off;
				record_suffix .flv;
				record_path /usr/local/nginx/html/recording/;
				record_unique on;
				record_interval 30m;
			}
		}

		application input {

			live on;
			meta copy;
			push_reconnect 1s;
			#	idle_streams off;
			drop_idle_publisher 5s;

			recorder rec {

				record off;
				record_suffix .flv;
				record_path /usr/local/nginx/html/recording/;
				record_unique on;
				record_interval 30m;
			}
		}

		application distribute {

			live on;
			meta copy;
			push_reconnect 1s;
			idle_streams off;
			drop_idle_publisher 10s;
		}

		application backup {

			live on;
			meta copy;
			push_reconnect 1s;
			idle_streams off;
			drop_idle_publisher 5s;

			recorder rec {

				record off;
				record_suffix .flv;
				record_path /usr/local/nginx/html/recording/;
				record_unique on;
				#                record_interval 30m;
			}
		}

		application recording {

			live on;
			meta copy;
			push_reconnect 1s;
			#	idle_streams off;
			drop_idle_publisher 5s;

			recorder rec {

				record all;
				record_suffix -%Y%m%d-%H_%M_%S.flv;
				record_path /usr/local/nginx/html/recording/;
				record_unique off;
				#                record_interval 120m;
				exec_record_done bash -c "/usr/local/nginx/scripts/config.sh convertrecording $path $dirname $basename";
				#                exec_record_done ffmpeg -y -i $path -c copy $dirname/$basename.mp4;
			}
		}


		application live {

			live on;
			meta copy;
			hls on;
			#    hls_nested on;
			hls_path /usr/local/nginx/html/hls;
			hls_fragment 2s;
			hls_playlist_length 10s;
			hls_sync 100ms;

			pull rtmp://localhost:1935/main/stream1 name=input static live=1;
		}

	}
}

############### FOR CONTROL PAGE ##################

http {

	#Firewall settings, only allow Local IP's
	#	allow all
	#    allow 192.168.0.0/16;
	#    allow 127.0.0.1;
	#    deny all;

	access_log logs/http_access.log;
	include mime.types;
	default_type application/octet-stream;
	sendfile on;
	keepalive_timeout 65;

	server {

		#HTTP Server port and name
		listen 80;
		server_name	localhost;

		auth_basic "Restricted Content";
		auth_basic_user_file /usr/local/nginx/conf/.htpasswd;

		# rtmp statistics
		location /stat {
			rtmp_stat all;
			rtmp_stat_stylesheet stat.xsl;
			allow 127.0.0.1;
			expires -1;
		}

		location /stat.xml {
			rtmp_stat all;
			expires -1;
		}

		location /stat.xsl {
			# you can move stat.xsl to a different location
			root html;
			expires -1;
		}

		location /config.txt {
			root /usr/local/nginx/scripts;
			expires -1;
		}



		location /live {
			types {
				application/vnd.apple.mpegurl m3u8;
				video/mp2t ts;
			}
			alias /usr/local/nginx/html/hls;
			add_header Cache-Control no-cache;
		}

		location / {
			#types {
			#	application/xslt+xml xsl;
			#}
			root html;
			index index.html index.htm index.php index.cgi;
			autoindex on;
			autoindex_exact_size off;
			autoindex_format html;
			autoindex_localtime on;
		}

        location ~ \.csv$ {
            types {
                text/plain csv;
            }
        }

		location ~ \.php$ {

			try_files $uri =404;
			fastcgi_split_path_info ^(.+\.php)(/.+)$;
			fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include fastcgi_params;
			expires -1;
		}


		# rtmp control
		location /control {

			rtmp_control all;
			# Enable CORS
			add_header Access-Control-Allow-Origin * always;

		}

		error_page 500 502 503 504 /50x.html;
		location = /50x.html {

			root html;
		}
	}
}

